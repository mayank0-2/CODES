Problem :- https://practice.geeksforgeeks.org/problems/0-1-knapsack-problem0945/1

Code :-



#include<bits/stdc++.h>
using namespace std;

int solve(int n, int w, vector<int> &val, vector<int> &wt) {
    vector<pair<int, int>> joint;
    vector<int> result(w + 1, 0); 
    for (int i = 0; i < n; i ++) {
        joint.push_back(make_pair(wt[i], val[i]));
    }
    sort(joint.begin(), joint.end());
    for (int i = 0; i < n; i ++) {
        vector<int> temp(w + 1);
        temp = result;
        for (int j = joint[i].first; j <= w; j ++) {
            result[j] = max(result[j], (joint[i].second + temp[j - joint[i].first]));
        }
    }

    return result[w];
}

int main(void) {
    ios :: sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int n, w;
    cin >> n >> w;
    vector<int> val(n), wt(n);
    for (int &x : val)  cin >> x;
    for (int &x : wt)   cin >> x;
    cout << solve(n, w, val, wt);
    return 0;
}
